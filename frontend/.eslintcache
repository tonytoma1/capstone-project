[{"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\index.js":"1","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\App.js":"3","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\account.js":"4","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\history.js":"5","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\home.js":"6","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\login-page.js":"7","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\Header\\Header_LP.js":"8","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\footer\\Footer.jsx":"9","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\login\\Login.jsx":"10","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\services\\user.service.js":"11","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\services\\authentication.service.js":"12","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\constants\\global-constants.js":"13","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\condition.js":"14","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\condition\\Condition.jsx":"15"},{"size":519,"mtime":1614362414627,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1614362414629,"results":"18","hashOfConfig":"17"},{"size":861,"mtime":1614380062177,"results":"19","hashOfConfig":"17"},{"size":1396,"mtime":1614362414628,"results":"20","hashOfConfig":"17"},{"size":89,"mtime":1614362414625,"results":"21","hashOfConfig":"17"},{"size":637,"mtime":1614538768018,"results":"22","hashOfConfig":"17"},{"size":370,"mtime":1614362414629,"results":"23","hashOfConfig":"17"},{"size":3700,"mtime":1614362414622,"results":"24","hashOfConfig":"17"},{"size":1398,"mtime":1614362414622,"results":"25","hashOfConfig":"17"},{"size":5052,"mtime":1614362414623,"results":"26","hashOfConfig":"17"},{"size":4438,"mtime":1614362414630,"results":"27","hashOfConfig":"17"},{"size":650,"mtime":1614362414629,"results":"28","hashOfConfig":"17"},{"size":90,"mtime":1614362414624,"results":"29","hashOfConfig":"17"},{"size":78,"mtime":1614538010784,"results":"30","hashOfConfig":"17"},{"size":4658,"mtime":1614546285507,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17iy4xa",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\index.js",[],["69","70"],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\App.js",["71"],"import React from 'react';\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport LoginPage from './pages/login-page'\r\nimport HomePage from './pages/home';\r\nimport AccountPage from './pages/account.js';\r\nimport history from './history';\r\nimport ConditionPage from './pages/condition';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n        <div className=\"App\">\r\n        <Router history={history}>\r\n    \r\n          <Switch>\r\n            \r\n            <Route path=\"/login\">\r\n              <LoginPage />\r\n            </Route>\r\n\r\n            <Route path=\"/account\">\r\n              <AccountPage />\r\n            </Route>\r\n    \r\n            <Route path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n\r\n          </Switch>\r\n    \r\n        </Router>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\account.js",["72","73"],"import React from 'react';\r\nimport UserService from 'services/user.service';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport Header from 'components/common/Header/Header_LP';\r\nimport Footer from 'components/common/footer/Footer';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default class Account extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userFound: false,\r\n            user: null\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // check to see if the user is logged in\r\n        UserService.isUserLoggedIn()\r\n                    .then((response) => {\r\n                        // The user is logged. Retrieve the account information.\r\n                        this.setState({userFound: true, user: response.data});\r\n                    })\r\n                    .catch((error) => {\r\n                        // The user isn't found.\r\n                        this.setState({userFound: false});\r\n                    })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {userFound} = this.state;\r\n\r\n        if(!userFound) {\r\n            {/* User isn't found. Send them back to the login screen */}\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return(<div>\r\n            <Header/>\r\n            <h1>Account page </h1>\r\n            <Footer/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\history.js",[],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\home.js",["74"],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\login-page.js",["75"],"import React from 'react';\r\nimport Footer from '../components/common/footer/Footer'\r\nimport Header_LP from '../components/common/Header/Header_LP'\r\nimport Login from '../components/common/login/Login'\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Header_LP />\r\n     <Login />\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\Header\\Header_LP.js",["76","77","78","79","80"],"import React, { Component } from \"react\";\r\nimport HeaderS from './HeaderS.css';\r\nimport Logo from '../../../images/logo.png';\r\nimport Cart from 'images/shopping-cart.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport * as Constants from 'constants/global-constants';\r\nimport UserService from \"services/user.service\";\r\nimport history from 'history.js';\r\n\r\n/*  \r\n            \r\n              <div>\r\n       <header className=\"Container\">\r\n        <div>\r\n        <img className=\"I\" src= {Logo}/>\r\n        <h2 className=\"Title\">Recommerce</h2>\r\n        </div>\r\n        <hr/>\r\n        </header></div>\r\n*/\r\nclass Header_LP extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    handleLogout() {\r\n        Cookies.remove(\"jwtToken\");\r\n        history.push(\"/login\");\r\n        window.location.reload();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var token = Cookies.get(\"jwtToken\");\r\n\r\n        if(token != null) {\r\n            this.setState({isLoggedIn: true});\r\n        }\r\n        else {\r\n            this.setState({isLoggedIn: false});\r\n        }\r\n\r\n        /*\r\n        UserService.getUser()\r\n                    .then((res) => {\r\n                        this.setState({isLoggedIn: true});\r\n                    })\r\n                    .catch((res) => {\r\n                        this.setState({isLoggedIn: false});\r\n                    })\r\n                    */\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const {isLoggedIn} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <header className=\"Container\">\r\n                    <div className=\"title-container\">\r\n                    <img className=\"I\" src= {Logo}/>\r\n                    <h2 className=\"Title\">Recommerce</h2>\r\n                    </div>\r\n            \r\n                    {/* Middle navigation */}\r\n                   \r\n                    <table className=\"navigational-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Home</td>\r\n                                <td>Sell Device</td>\r\n                                <td>About</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                    {/* Right most navigation */}\r\n                    <table className=\"login-register-table\">\r\n                        <tbody>\r\n                           <tr>\r\n                                {/* Check to see if the user is not logged in */}\r\n                                {!isLoggedIn && \r\n                                <td> \r\n                                    <Link to=\"/login\">Login</Link> \r\n                                </td>\r\n                                }\r\n                                {!isLoggedIn && \r\n                                    <td className=\"td-login-register\">Register</td>\r\n                                }\r\n                                {/* If the user is logged in, have the option to log out */}\r\n                                {isLoggedIn && \r\n                                    <button onClick={this.handleLogout}>Logout</button>\r\n                                }\r\n                                    <td>\r\n                                        <img className=\"shopping-cart-image\" src= {Cart} />\r\n                                    </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                <hr/>\r\n                </header>\r\n            </div>\r\n        \r\n      )\r\n    }\r\n}\r\n\r\nexport default Header_LP;\r\n","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\footer\\Footer.jsx",[],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\common\\login\\Login.jsx",["81","82"],"import React from 'react';\r\nimport Logo from '../../../images/logo.png';\r\nimport './login-css.css';\r\nimport AuthenticationService from '../../../services/authentication.service.js';\r\nimport history from '../../../history.js';\r\nimport Cookies from 'js-cookie';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport UserService from 'services/user.service';\r\nimport * as Constants from 'constants/global-constants';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loggedIn: false,\r\n            failedLoginAttempt: false\r\n        }\r\n\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n       // Check if the user is logged in\r\n        UserService.isUserLoggedIn()\r\n                    .then((response) => {\r\n                    // the user is logged in.\r\n                    this.setState({loggedIn: true});\r\n                })\r\n                .catch((error) => {\r\n                    // the user is not logged in.\r\n                    this.setState({loggedIn: false});\r\n                });             \r\n    }\r\n    \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        // Authenticate the user and then send them to the account page.\r\n        AuthenticationService.login(this.state.email, this.state.password)\r\n            .then((response) => {\r\n                /*\r\n                * Each JWT token must begin with 'Bearer' keyword, and then a space must be applied\r\n                * between the JWT token and the 'Bearer' keyword.\r\n                * For example, a complete JWT token will look like this:\r\n                * 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\r\n                * \r\n                * Below, we are just going to store the token as a cookie and then on each request\r\n                * we must add the 'Bearer' keyword.\r\n                * \r\n                * Moving forward, in order to retrieve secured endpoints from the backend, \r\n                * we must keep sending the JWT token on each request. \r\n                */\r\n                var jwtToken = response.data.token;\r\n            \r\n                UserService.saveJwtToken(jwtToken);\r\n                history.push(\"/account\");\r\n                window.location.reload();\r\n              \r\n\r\n            })\r\n            .catch((error)  => {\r\n                this.setState({failedLoginAttempt: true});\r\n                console.log(\"error caught\");\r\n            });\r\n            \r\n        \r\n       \r\n      \r\n    }\r\n\r\n    // Changes the email state every time the email input is modified.\r\n    handleEmailChange(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n\r\n    // Changes the password state every time the input is modified\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n        render() {\r\n            const {loggedIn} = this.state;\r\n            const {failedLoginAttempt} = this.state;\r\n\r\n            if(loggedIn) {\r\n                return <Redirect to=\"/account\" />\r\n            }\r\n            \r\n\r\n            return(\r\n                <div className=\"login-container\">\r\n                    <figure>\r\n                        <img src= {Logo} alt=\"Recommerce\" />\r\n                        <figcaption>Recommerce</figcaption>\r\n                    </figure>\r\n\r\n                    {failedLoginAttempt && <p className=\"login-error\">Login credentials are incorrect. Please try again</p>}\r\n                    \r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <section>\r\n                            <p>Email</p>\r\n                            <input type=\"email\" id=\"loginEmail\"  onChange={this.handleEmailChange} \r\n\r\n                                                                placeholder=\"Enter your Email here\"/>\r\n                        </section>\r\n\r\n                        <section>\r\n                            <p>Password</p>\r\n                            <input type=\"Password\" id=\"loginPassword\"  onChange={this.handlePasswordChange} \r\n                                                                    \r\n                                                                     placeholder=\"Enter your Password here\"/>\r\n                        </section>\r\n                        <input type=\"Submit\" className=\"submitButton\" id=\"loginSignIn\" defaultValue=\"SignIn\" />\r\n                    </form>\r\n                    \r\n                    <article className=\"forgot-password\"> \r\n                        Forgot password? Click \r\n                        <p>&nbsp;here.</p>\r\n                    </article>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\services\\user.service.js",["83","84"],"import axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport * as Constants from 'constants/global-constants';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n/*\r\n* Retrieves the user info from the backend.\r\n*/\r\nclass UserService {\r\n\r\n\r\n    async isUserLoggedIn() {\r\n            /*\r\n             * To verify login\r\n             * 1. Check if there is a jwt token\r\n             * 2. Check if you can retrieve the username from the jwt token\r\n             * 3. Check if you can pull the account information from the backend \r\n             */\r\n\r\n            try {\r\n                // 1. Get the jwt token\r\n                var jwtToken = this.getJwtToken();\r\n                // 2. Check if there is a username asssociated with the jwt token\r\n                var username = this.getUsernameFromJwtToken();\r\n            }\r\n            catch(e) {\r\n                // Authentication for JWT has failed. Person not logged in\r\n                return Promise.reject(\"JWT or Username invalid\");\r\n            }\r\n            \r\n            // 3. Get the account information\r\n          return await this.getAccount(username, jwtToken)\r\n        \r\n        \r\n    }\r\n\r\n    // Calls the account end point to retrieve account information.\r\n     getAccount(usernameForAccountWanted, jwtToken) { \r\n        \r\n        var jsonResult = {Authorization: 'Bearer '.concat(jwtToken)};\r\n\r\n        var config = {\r\n            headers: jsonResult,\r\n            params: {\r\n                username: usernameForAccountWanted\r\n            }\r\n        }\r\n        return axios.get(Constants.API_URL.concat(\"account\"), config);\r\n    }\r\n\r\n    async getUser() {\r\n        var usernameRetrieved = this.getUsernameFromJwtToken();\r\n\r\n        var config = {\r\n            headers: this.authenticationHeader(),\r\n            params: {\r\n                username: usernameRetrieved\r\n            }\r\n        }\r\n        return await axios.get(Constants.API_URL + \"account\", config)\r\n                           .then((res) => {return res})\r\n                           .catch((res) => {return res});\r\n    }\r\n\r\n    /*\r\n     * Creates the authentication header so the backend API can verify the JWT Token \r\n     */\r\n    authenticationHeader() {\r\n        const token = Cookies.get(Constants.JWT_TOKEN);\r\n\r\n        var jsonResult = {Authorization: 'Bearer '.concat(token)};\r\n\r\n        return jsonResult;\r\n    }\r\n\r\n    // Checks if there is a username associated with the JWT token.\r\n    getUsernameFromJwtToken() {\r\n        const token = Cookies.get(Constants.JWT_TOKEN);\r\n\r\n        if(token == null) {\r\n            throw 'JWT Token is null';\r\n        }\r\n\r\n        var username = jwt_decode(token);\r\n\r\n        if(username == null) {\r\n            throw 'Username cannot be decoded from jwt token';\r\n        }\r\n\r\n        return username.sub;\r\n    }\r\n\r\n    saveJwtToken(token) {\r\n        Cookies.set(Constants.JWT_TOKEN, token, {expires: 1});\r\n    }\r\n\r\n    getJwtToken() {\r\n        return Cookies.get(Constants.JWT_TOKEN);\r\n    }\r\n\r\n    // Original way to check if the user is logged in.\r\n    // Dont use this function, but place it inside onComponentMount()\r\n    originalWayToTestForUserLogin() {\r\n        try {\r\n            /*\r\n             * To verify login\r\n             * 1. Check if there is a jwt token\r\n             * 2. Check if you can retrieve the username from the jwt token\r\n             * 3. Check if you can pull the account information from the backend \r\n             */\r\n\r\n            // 1. Get the jwt token\r\n            var jwtToken = UserService.getJwtToken();\r\n            // 2. Check if there is a username asssociated with the jwt token\r\n            var username = UserService.getUsernameFromJwtToken();\r\n            \r\n            // 3. Get the account information\r\n            UserService.getAccount(username, jwtToken)\r\n                        .then((response) => {\r\n                            // Account information retrieved. The user was logged in.\r\n                            this.setState({loggedIn: true});\r\n                        })\r\n                        .catch((error) => {\r\n                            // The user wasn't logged in since an error was thrown\r\n                            this.setState({loggedIn: false});\r\n                        })\r\n        }\r\n        catch(error) {\r\n            // An error was thrown, therefore the person is not logged in\r\n            this.setState({loggedIn: false});\r\n        }\r\n    }\r\n}\r\n\r\nexport default new UserService();","C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\services\\authentication.service.js",[],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\constants\\global-constants.js",[],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\pages\\condition.js",["85"],"C:\\Users\\Law\\Desktop\\capstone-project\\frontend\\src\\components\\condition\\Condition.jsx",["86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":38,"column":13,"nodeType":"100","messageId":"101","endLine":38,"endColumn":73},{"ruleId":"102","severity":1,"message":"103","line":21,"column":13,"nodeType":"104","endLine":21,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":9,"column":6,"nodeType":"104","endLine":9,"endColumn":19},{"ruleId":"93","severity":1,"message":"105","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"93","severity":1,"message":"106","line":7,"column":13,"nodeType":"95","messageId":"96","endLine":7,"endColumn":22},{"ruleId":"93","severity":1,"message":"107","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":70,"column":21,"nodeType":"104","endLine":70,"endColumn":53},{"ruleId":"108","severity":1,"message":"109","line":105,"column":41,"nodeType":"104","endLine":105,"endColumn":92},{"ruleId":"93","severity":1,"message":"97","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"106","line":9,"column":13,"nodeType":"95","messageId":"96","endLine":9,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":81,"column":13,"nodeType":"112","messageId":"113","endLine":81,"endColumn":39},{"ruleId":"110","severity":1,"message":"111","line":87,"column":13,"nodeType":"112","messageId":"113","endLine":87,"endColumn":63},{"ruleId":"93","severity":1,"message":"114","line":4,"column":7,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"115","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":19},{"ruleId":"93","severity":1,"message":"116","line":7,"column":11,"nodeType":"95","messageId":"96","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":76,"column":29,"nodeType":"104","endLine":76,"endColumn":48},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'ConditionPage' is defined but never used.","Identifier","unusedVar","'Cookies' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-pascal-case","Imported JSX component Header_LP must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'HeaderS' is defined but never used.","'Constants' is defined but never used.","'UserService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'Condition' is defined but never used.","'Container' is defined but never used.","'CardImg' is defined but never used.","no-global-assign","no-unsafe-negation"]