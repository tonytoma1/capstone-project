[{"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\index.js":"1","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\App.js":"2","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\login-page.js":"4","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\Header\\Header_LP.js":"5","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\footer\\Footer.jsx":"6","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\login\\Login.jsx":"7","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\home.js":"8","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\services\\authentication.service.js":"9","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\history.js":"10","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\account.js":"11","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\constants\\global-constants.js":"12","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\services\\user.service.js":"13"},{"size":519,"mtime":1613146535223,"results":"14","hashOfConfig":"15"},{"size":819,"mtime":1613770470296,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610154547301,"results":"17","hashOfConfig":"15"},{"size":370,"mtime":1613154625926,"results":"18","hashOfConfig":"15"},{"size":3700,"mtime":1614063756310,"results":"19","hashOfConfig":"15"},{"size":1398,"mtime":1613154625923,"results":"20","hashOfConfig":"15"},{"size":5172,"mtime":1614064416456,"results":"21","hashOfConfig":"15"},{"size":305,"mtime":1613426325611,"results":"22","hashOfConfig":"15"},{"size":650,"mtime":1613535051128,"results":"23","hashOfConfig":"15"},{"size":89,"mtime":1613538664871,"results":"24","hashOfConfig":"15"},{"size":1132,"mtime":1614029575743,"results":"25","hashOfConfig":"15"},{"size":90,"mtime":1613782747301,"results":"26","hashOfConfig":"15"},{"size":1590,"mtime":1614026249120,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jyxxxc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\index.js",[],["61","62"],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\App.js",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\login-page.js",["63"],"import React from 'react';\r\nimport Footer from '../components/common/footer/Footer'\r\nimport Header_LP from '../components/common/Header/Header_LP'\r\nimport Login from '../components/common/login/Login'\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Header_LP />\r\n     <Login />\r\n     <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\Header\\Header_LP.js",["64","65","66","67","68"],"import React, { Component } from \"react\";\r\nimport HeaderS from './HeaderS.css';\r\nimport Logo from '../../../images/logo.png';\r\nimport Cart from 'images/shopping-cart.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport * as Constants from 'constants/global-constants';\r\nimport UserService from \"services/user.service\";\r\nimport history from 'history.js';\r\n\r\n/*  \r\n            \r\n              <div>\r\n       <header className=\"Container\">\r\n        <div>\r\n        <img className=\"I\" src= {Logo}/>\r\n        <h2 className=\"Title\">Recommerce</h2>\r\n        </div>\r\n        <hr/>\r\n        </header></div>\r\n*/\r\nclass Header_LP extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: false\r\n        }\r\n\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    handleLogout() {\r\n        Cookies.remove(\"jwtToken\");\r\n        history.push(\"/login\");\r\n        window.location.reload();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var token = Cookies.get(\"jwtToken\");\r\n\r\n        if(token != null) {\r\n            this.setState({isLoggedIn: true});\r\n        }\r\n        else {\r\n            this.setState({isLoggedIn: false});\r\n        }\r\n\r\n        /*\r\n        UserService.getUser()\r\n                    .then((res) => {\r\n                        this.setState({isLoggedIn: true});\r\n                    })\r\n                    .catch((res) => {\r\n                        this.setState({isLoggedIn: false});\r\n                    })\r\n                    */\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const {isLoggedIn} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <header className=\"Container\">\r\n                    <div className=\"title-container\">\r\n                    <img className=\"I\" src= {Logo}/>\r\n                    <h2 className=\"Title\">Recommerce</h2>\r\n                    </div>\r\n            \r\n                    {/* Middle navigation */}\r\n                   \r\n                    <table className=\"navigational-table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Home</td>\r\n                                <td>Sell Device</td>\r\n                                <td>About</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                    {/* Right most navigation */}\r\n                    <table className=\"login-register-table\">\r\n                        <tbody>\r\n                           <tr>\r\n                                {/* Check to see if the user is not logged in */}\r\n                                {!isLoggedIn && \r\n                                <td> \r\n                                    <Link to=\"/login\">Login</Link> \r\n                                </td>\r\n                                }\r\n                                {!isLoggedIn && \r\n                                    <td className=\"td-login-register\">Register</td>\r\n                                }\r\n                                {/* If the user is logged in, have the option to log out */}\r\n                                {isLoggedIn && \r\n                                    <button onClick={this.handleLogout}>Logout</button>\r\n                                }\r\n                                    <td>\r\n                                        <img className=\"shopping-cart-image\" src= {Cart} />\r\n                                    </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                <hr/>\r\n                </header>\r\n            </div>\r\n        \r\n      )\r\n    }\r\n}\r\n\r\nexport default Header_LP;\r\n","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\footer\\Footer.jsx",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\components\\common\\login\\Login.jsx",["69"],"import React from 'react';\r\nimport Logo from '../../../images/logo.png';\r\nimport './login-css.css';\r\nimport AuthenticationService from '../../../services/authentication.service.js';\r\nimport history from '../../../history.js';\r\nimport Cookies from 'js-cookie';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport UserService from 'services/user.service';\r\nimport * as Constants from 'constants/global-constants';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loggedIn: false,\r\n            failedLoginAttempt: false\r\n        }\r\n\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* Check for a valid JWT token. If there is a valid token, then automatically \r\n           navigate the user to the home page. We want to prevent the user to login twice in a row.\r\n         */\r\n        var token = Cookies.get(\"jwtToken\");\r\n        \r\n        if(token != null) {\r\n            this.setState({loggedIn: true});\r\n            console.log(\"logged in\");\r\n            console.log(token);\r\n        }\r\n        else {\r\n            this.setState({loggedIn: false});\r\n            console.log(\"Not logged in\");\r\n        }  \r\n              \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        // Authenticate the user and then send them to the account page.\r\n        AuthenticationService.login(this.state.email, this.state.password)\r\n            .then((response) => {\r\n                /*\r\n                * Each JWT token must begin with 'Bearer' keyword, and then a space must be applied\r\n                * between the JWT token and the 'Bearer' keyword.\r\n                * For example, a complete JWT token will look like this:\r\n                * 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\r\n                * \r\n                * Below, we are just going to store the token as a cookie and then on each request\r\n                * we must add the 'Bearer' keyword.\r\n                * \r\n                * Moving forward, in order to retrieve secured endpoints from the backend, \r\n                * we must keep sending the JWT token on each request. \r\n                */\r\n                var jwtToken = response.data.token;\r\n            \r\n                UserService.saveJwtToken(jwtToken);\r\n                history.push(\"/account\");\r\n                window.location.reload();\r\n              \r\n\r\n            })\r\n            .catch((error)  => {\r\n                this.setState({failedLoginAttempt: true});\r\n                console.log(\"error caught\");\r\n            });\r\n            \r\n        \r\n       \r\n      \r\n    }\r\n\r\n    // Changes the email state every time the email input is modified.\r\n    handleEmailChange(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n\r\n    // Changes the password state every time the input is modified\r\n    handlePasswordChange(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n        render() {\r\n            const {loggedIn} = this.state;\r\n            const {failedLoginAttempt} = this.state;\r\n\r\n            if(loggedIn) {\r\n                return <Redirect to=\"/account\" />\r\n            }\r\n            \r\n\r\n            return(\r\n                <div className=\"login-container\">\r\n                    <figure>\r\n                        <img src= {Logo} alt=\"Recommerce\" />\r\n                        <figcaption>Recommerce</figcaption>\r\n                    </figure>\r\n\r\n                    {failedLoginAttempt && <p className=\"login-error\">Login credentials are incorrect. Please try again</p>}\r\n                    \r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <section>\r\n                            <p>Email</p>\r\n                            <input type=\"email\" id=\"loginEmail\"  onChange={this.handleEmailChange} \r\n\r\n                                                                placeholder=\"Enter your Email here\"/>\r\n                        </section>\r\n\r\n                        <section>\r\n                            <p>Password</p>\r\n                            <input type=\"Password\" id=\"loginPassword\"  onChange={this.handlePasswordChange} \r\n                                                                    \r\n                                                                     placeholder=\"Enter your Password here\"/>\r\n                        </section>\r\n                        <input type=\"Submit\" className=\"submitButton\" id=\"loginSignIn\" defaultValue=\"SignIn\" />\r\n                    </form>\r\n                    \r\n                    <article className=\"forgot-password\"> \r\n                        Forgot password? Click \r\n                        <p>&nbsp;here.</p>\r\n                    </article>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\home.js",["70"],"import React from 'react';\r\nimport Header_LP from '../components/common/Header/Header_LP';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header_LP />\r\n                <h1>Home</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\services\\authentication.service.js",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\history.js",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\pages\\account.js",["71","72"],"import React from 'react';\r\nimport UserService from 'services/user.service';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport Header from 'components/common/Header/Header_LP';\r\nimport Footer from 'components/common/footer/Footer';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default class Account extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userFound: false,\r\n            user: null\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // check to see if the user is logged in\r\n        // TODO Fix authentication and check if token is valid.\r\n        var userFound = Cookies.get(\"jwtToken\");\r\n\r\n        if(userFound != null) {\r\n            this.setState({userFound: true});\r\n            console.log(\"user found\");\r\n        }\r\n        else {\r\n            this.setState({userFound: false});\r\n            console.log(\"user not found\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        \r\n\r\n        return(<div>\r\n            <Header/>\r\n            <h1>Account page </h1>\r\n            <Footer/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\constants\\global-constants.js",[],"C:\\Users\\718707\\Desktop\\capstone-project\\frontend\\src\\services\\user.service.js",["73","74"],"import axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport * as Constants from 'constants/global-constants';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n/*\r\n* Retrieves the user info from the backend.\r\n*/\r\nclass UserService {\r\n\r\n    async getUser() {\r\n        var usernameRetrieved = this.getUsernameFromJwtToken();\r\n\r\n        var config = {\r\n            headers: this.authenticationHeader(),\r\n            params: {\r\n                username: usernameRetrieved\r\n            }\r\n        }\r\n        return await axios.get(Constants.API_URL + \"account\", config)\r\n                           .then((res) => {return res})\r\n                           .catch((res) => {return res});\r\n    }\r\n\r\n\r\n    /*\r\n     * Creates the authentication header so the backend API can verify the JWT Token \r\n     */\r\n   async authenticationHeader() {\r\n        const token = Cookies.get(Constants.JWT_TOKEN);\r\n\r\n        var jsonResult = {Authorization: 'Bearer ' + token};\r\n\r\n        return jsonResult;\r\n    }\r\n\r\n   async getUsernameFromJwtToken() {\r\n        const token = Cookies.get(Constants.JWT_TOKEN);\r\n\r\n        if(token == null) {\r\n            throw 'JWT Token is null';\r\n        }\r\n\r\n        var username = jwt_decode(token);\r\n\r\n        if(username == null) {\r\n            throw 'Username cannot be decoded from jwt token';\r\n        }\r\n\r\n        return username.sub;\r\n    }\r\n\r\n  async saveJwtToken(token) {\r\n        Cookies.set(Constants.JWT_TOKEN, token, {expires: 1});\r\n    }\r\n\r\n    async getJwtToken() {\r\n        return Cookies.get(Constants.JWT_TOKEN);\r\n    }\r\n}\r\n\r\nexport default new UserService();",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":9,"column":6,"nodeType":"81","endLine":9,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":7,"column":13,"nodeType":"84","messageId":"85","endLine":7,"endColumn":22},{"ruleId":"82","severity":1,"message":"87","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":70,"column":21,"nodeType":"81","endLine":70,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":105,"column":41,"nodeType":"81","endLine":105,"endColumn":92},{"ruleId":"82","severity":1,"message":"86","line":9,"column":13,"nodeType":"84","messageId":"85","endLine":9,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":10,"column":17,"nodeType":"81","endLine":10,"endColumn":30},{"ruleId":"82","severity":1,"message":"87","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"90","line":3,"column":11,"nodeType":"84","messageId":"85","endLine":3,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":41,"column":13,"nodeType":"93","messageId":"94","endLine":41,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":47,"column":13,"nodeType":"93","messageId":"94","endLine":47,"endColumn":63},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react/jsx-pascal-case","Imported JSX component Header_LP must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'HeaderS' is defined but never used.","Identifier","unusedVar","'Constants' is defined but never used.","'UserService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Redirect' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]